#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
using namespace std;
const int maxn = 1000000 + 3, maxh = 1000 + 3;
int n, k, m, a[maxn], cnt[maxh];

void build() {
    for (int i = 3; i < n; i++)
        a[i] = (a[i - 1] + a[i - 2] + a[i - 3]) % m + 1;
    a[n] = 0;
}

int main() {
    a[0] = 1; a[1] = 2; a[2] = 3;
    int T, t = 0;
    scanf("%d", &T);
    while (T--) {
        scanf("%d%d%d", &n, &m, &k);
        printf("Case %d: ", ++t);
        build();
        int L = 0, R = 0, ans = maxn;
        set<int> unq;
        memset(cnt, 0, sizeof(cnt));
        while (R < n && unq.size() < k) {
            cnt[a[R]]++;
            if (a[R] <= k) unq.insert(a[R]);
            R++;
        }
        if (R == n && unq.size() < k) { printf("sequence nai\n"); continue;}
        do {
            while (a[L] > k || cnt[a[L]] > 1) {
                cnt[a[L]]--;
                L++;
            }
            ans = min(ans, R - L);
            cnt[a[R]]++;
            R++;
        } while (R < n);
        printf("%d\n", ans);
        
    }
    return 0;
}
