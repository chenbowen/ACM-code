#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
const int maxn = 10;
char s[maxn][5];
map<vector<int>, double > d;

double dp(vector<int> &dep, int c) {
    if (c == 0) return 1;
    if (d.count(dep)) return d[dep];
    int tot = 0;
    double sum = 0;
    for (int i = 0; i < 9; i++) if (dep[i])
        for (int j = i + 1; j < 9; j++) 
            if (dep[j] && s[i][dep[i] - 1] == s[j][dep[j] - 1]) {
                dep[i]--; dep[j]--;
                tot++;
                sum += dp(dep, c - 2);
                dep[i]++; dep[j]++;
            }
    if (tot == 0) return d[dep] = 0;
    return d[dep] = sum / tot;
}

int main() {
    char temp[maxn];
    while (scanf("%s", temp) == 1) {
        s[0][0] = temp[0];
        for (int i = 0; i < 9; i++) 
            for (int j = 0; j < 4; j++) {  
                if (!i && !j) continue;
                scanf("%s", temp);
                s[i][j] = temp[0];
            }
        d.clear();
        vector<int> index(9, 4);
        printf("%.6f\n", dp(index, 36));
    }
    return 0;
}
