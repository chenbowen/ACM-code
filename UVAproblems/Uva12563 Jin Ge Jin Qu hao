#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAXN = 50 + 3, MAXT = 9000 + 5, LAST = 678;
int n, t, a[MAXN];

struct X {
    int n, len;
    X(int n = 0, int l = 0): n(n), len(l) {}
}d[MAXT][MAXN];

int main() {
    int T, kase = 0;
    scanf("%d", &T);
    while (T--) {
        scanf("%d%d", &n, &t);
        for (int i = 0; i < n; i++) scanf("%d", &a[i]);
        for (int i = 0; i < t; i++) 
            for (int j = n - 1; j >= 0; j--) {
                if (j == n - 1) {
                    d[i][j] = X(1, LAST);
                    if (i >= a[j]) { d[i][j].n++; d[i][j].len += a[j];}
                }
                else {
                    d[i][j] = (i == 0 ? X(1, LAST) : d[i][j + 1]);
                    if (i >= a[j]) {
                        X &nx = d[i - a[j]][j + 1];
                        if(nx.n + 1 > d[i][j].n || (nx.n + 1 == d[i][j].n && nx.len + a[j] > d[i][j].len)) 
                            d[i][j] = X(nx.n + 1, nx.len + a[j]);
                    }
                }
            }
        printf("Case %d: %d %d\n", ++kase, d[t - 1][0].n, d[t - 1][0].len);
    }
    return 0;
}
