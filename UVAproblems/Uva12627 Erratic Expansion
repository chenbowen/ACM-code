#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxk = 30 + 1;
int K, A, B;
long long c[maxk];

void init() {
    c[0] = 1;
    for (int i = 1; i < maxk; i++) c[i] = c[i - 1] * 3; 
}

long long g(int k, int i) {
    if (i > (1 << k)) return 0;
    if (k == 0) return 1;
    int pre_size = 1 << (k - 1);
    if (i > pre_size) return g(k - 1, i - pre_size);
    return c[k - 1] + 2 * g(k - 1, i);
}

int main() {
    init();
    int T, t = 0;
    scanf("%d", &T);
    while (T--) {
        scanf("%d%d%d", &K, &A, &B);
        printf("Case %d: %lld\n", ++t, g(K, A) - g(K, B + 1));
    }
    return 0;
}
