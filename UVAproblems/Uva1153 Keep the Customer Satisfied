#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
using namespace std;
const int maxn = 800000 + 5;
int n;

struct task {
    int q, d;
    task(int q = 0, int d = 0): q(q), d(d) {}
    bool operator < (const task &rhs) const {
        return d < rhs.d || (d == rhs.d && q < rhs.q);
    }
}a[maxn];

int main() {
    int T, t = 0; scanf("%d", &T);
    while (T--) {
        if (++t > 1) putchar('\n');
        scanf("%d", &n);
        priority_queue<int> que;
        for (int i = 0; i < n; i++) { scanf("%d%d", &a[i].q, &a[i].d);}
        sort(a, a + n);
        int L = 0;
        for (int i = 0; i < n; i++) {
            if (L + a[i].q <= a[i].d) {
                que.push(a[i].q);
                L += a[i].q;
            }
            else if (!que.empty() && a[i].q < que.top()) {
                L -= que.top();
                que.pop();
                que.push(a[i].q);
                L += a[i].q;
            }
        }
        printf("%d\n", int(que.size()));
    }
    return 0;
}
