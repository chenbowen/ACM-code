#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAXN = 500 + 3;
int n, k, a[MAXN];
bool ans[MAXN];

bool check(long long M) {
    int cnt = 1;
    long long cur = 0;
    for (int i = 0; i < n; i++) {
        cur += a[i];
        if (cur > M) {
            cur = a[i];
            cnt++;
        }
        if (cnt > k) return false;
    }
    return true;
}

int main() {
    int T;
    scanf("%d", &T);
    while (T--) {
        scanf("%d%d", &n, &k);
        long long maxn = 0;
        int maxp = -1;
        for (int i = 0; i < n; i++) {
            scanf("%d", &a[i]);
            maxn += a[i];
            maxp = max(maxp, a[i]);
        }
        long long _s = maxp, _e = maxn, m, x = maxn, cur = 0;
        while (_s <= _e) {
            m = _s + (_e - _s) / 2;
            if (check(m)) {
                if (x > m) x = m;
                _e = m - 1;
            }
            else _s = m + 1;
        }
        memset(ans, 0, sizeof(ans));
        int cnt = 1;
        for (int i = n - 1; i >= 0; i--) {
            cur += a[i];
            if (cur > x) { cur = a[i]; ans[i] = 1; cnt++;}
        }
        if (cnt < k) 
            for (int i = 0; i < n && cnt < k; i++) 
                if (!ans[i]) {cnt++; ans[i] = 1;}
        for(int i = 0; i < n-1; i++) {
            printf("%d ", a[i]);
            if(ans[i]) printf("/ ");
        }
        printf("%d\n", a[n-1]);
    }
    return 0;
}
